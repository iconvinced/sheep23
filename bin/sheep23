#!/usr/bin/env python3
# -*- encoding: utf-8 -*-

import sys
from scapy.all import *

Ether.tcp_flow_id = lambda self:\
    "{}:{}_{}:{}".format(self[IP].src, self[TCP].sport, self[IP].dst, self[TCP].dport) if (IP in self and TCP in self) else ""

Sheeps = {}

class Sheep23:
    queue = bytearray()
    username = None
    password = None
    _login = False

    def reset(self):
        del self.queue[:]
        self.username = None
        self.password = None
        self._login = False

    def receive_enter(self):
        username, password = None, None

        if self._login:
            pass
        elif self.username is None:
            self.username = "".join(self.queue.decode('ascii'))
            del self.queue[:]
        else:
            self.password = "".join(self.queue.decode('ascii'))
            self._login = True
            username, password = self.username, self.password

        return username, password


    def login(self):
        return self._login

    def push(self, buf):
        self.queue.extend(bytearray(buf))

    def pop(self):
        if len(self.queue) > 0:
            self.queue.pop()

def filter_telnet_client(handler):
    def _(pkt):
        if TCP in pkt and pkt[TCP].dport == 23:
            return handler(pkt)

    return _

@filter_telnet_client
def handler(pkt):
    tcp_flow_id = pkt.tcp_flow_id()
    if tcp_flow_id not in Sheeps:
        Sheeps[tcp_flow_id] = Sheep23()

    sheep = Sheeps[tcp_flow_id]

    if pkt[TCP].flags & 0x02: # has SYN
        sheep.reset()

    elif Raw not in pkt:
        return

    elif pkt[Raw].load[:3] == bytes([0xff, 0xfb, 0x18]): # WILL TERMIANL TYPE
        sheep.reset()

    elif pkt[Raw].load[:3] == bytes([0xff, 0xfa, 0x18]): # SB TERMINAL-TYPE
        pass

    elif pkt[Raw].load == b"\r":
        username, password = sheep.receive_enter()

        if username and password:
            shadow_since = 2
            print("Username: " + username)
            print("Password: " + password[:shadow_since] + '*'*(len(password) - shadow_since))

    elif not sheep.login():
        sheep.push(pkt[Raw].load)

if __name__ == '__main__':
    iface = sys.argv[1] if len(sys.argv) > 1 else None
    sniff(iface=iface, prn=handler)
